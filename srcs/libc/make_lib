#! /bin/bash

SRC=src
TMP=lib42
INCLUDE=include

if [ -e $TMP ]; then
	/bin/rm -fr $TMP
fi

LIST_OF_DIRECTORY=$(find . -maxdepth 1 -type d | sed 's/\.$//g')

/bin/mkdir $TMP
/bin/mkdir $TMP/$INCLUDE
/bin/mkdir $TMP/$SRC

for NAME_DIR in $LIST_OF_DIRECTORY
do
	LIST_OF_INCLUDE=$(find $NAME_DIR -type f -name "*.h")
	if [ $NAME_DIR == "./include" ]; then
		for FILE_H in $LIST_OF_INCLUDE
		do
			cp $FILE_H $TMP/$INCLUDE
		done
	else
		/bin/mkdir $TMP/$INCLUDE/$NAME_DIR
		for FILE_H in $LIST_OF_INCLUDE
		do
			cp $FILE_H $TMP/$INCLUDE/$NAME_DIR
		done
	fi
done

for FILE_C in $(find . -type f -name "*.c")
do
	cp $FILE_C $TMP/$SRC
done

LIST_OF_FILE_H=$(find $TMP/$INCLUDE -type f -name "*.h")

function	sed_fix
{
	local	tmp_file="$(mktemp -t temp.XXXXX)"
	local	name_file="$(basename $1)"
	local	file="$(find . -type f -name $name_file -not -path "./$TMP/*")"

	sed "s/$2/$3/g" $1 > ${tmp_file} && mv ${tmp_file} $1
	cp $1 $file
}

function	fix_header
{
	while [ ! -z "$1" ];
	do
		FILE_H=$(find $TMP/$INCLUDE -type f -name "*.h" -exec basename "{}" \;)
		for NAME_INCLUDE in $(/bin/cat $1 | grep "#include" | sed 's/#include <//g' | sed 's/>//g')
		do
			for PATTERN in $FILE_H
			do
				if [ $PATTERN == $NAME_INCLUDE ]; then
					DIR=$(echo $LIST_OF_FILE_H | tr ' ' '\n' | grep "$PATTERN" | sed 's/'$TMP'\/'$INCLUDE'\///g' | sed 's/\//\\\//g')
					CHANGE=$(echo "#include <$PATTERN>")
					TO=$(echo "#include <$DIR>")
					if [ "$CHANGE" != "$TO" ]; then
						echo $1 "$CHANGE" "$TO"
						sed_fix $1 "$CHANGE" "$TO"
					fi
				fi
			done
		done
		shift
	done
}

while getopts "f" OPTION
do
	case $OPTION in
		f)
		fix_header $(find $TMP/$SRC -type f -name "*.c")
		fix_header $LIST_OF_FILE_H
		;;
	esac
done

cat ../../doc/misc/Makefile_part1.txt > $TMP/Makefile
printf "SRC\t\t=\t" >> $TMP/Makefile
for SRC in $(find $TMP/$SRC -type f -name "*.c" | sed 's/'$TMP'\///g')
do
	printf "$SRC \\" >> $TMP/Makefile
	printf "\n\t\t\t" >> $TMP/Makefile
done
cat ../../doc/misc/Makefile_part2.txt >> $TMP/Makefile
